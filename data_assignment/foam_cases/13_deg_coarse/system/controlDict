/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  plus                                  |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
 
 

application     rhoPimpleFoam;
 
startFrom       latestTime;
 
startTime       0.0;
 
stopAt          endTime;
 
endTime         1;
 
deltaT          0.0000001;

adjustTimeStep  yes;

maxCo 0.5;
 
writeControl    adjustableRunTime;
 
writeInterval   0.0005;
 
purgeWrite      0;
 
writeFormat     ascii;
 
writePrecision  8;
 
writeCompression off;
 
timeFormat      general;
 
timePrecision   6;
 
runTimeModifiable true;
 
functions
{
    fieldAverage1
    {
        type            fieldAverage;
        libs            (fieldFunctionObjects);
        writeControl    writeTime;
        fields
        (
            U
            {
                mean        on;
                prime2Mean  off;
                base        time;
            }

            p
            {
                mean        on;
                prime2Mean  off;
                base        time;
            }
            nut
            {
                mean        on;
                prime2Mean  off;
                base        time;
            }
            T 
            {
                mean        on;
                prime2Mean  off;
                base        time;
            }

        );
    }
    
    forces
    {
        type            forceCoeffs;
        libs            (forces);
        writeControl    timeStep;

        patches
        (
           Airfoil Flap
        );
        p               p;
        U               U;
        rho             rhoInf;
        rhoInf      1.2049;

        CofR        (0 0 0);
        // 6 deg
//         liftDir     (-0.1045284633 0.99452189 0);
//         dragDir     (0.99452189 0.1045284633 0);
        
        // 13 deg
        liftDir     (-0.2266513074 0.9739759673 0);
        dragDir     (0.9739759673 0.2266513074 0);
        
        // 0 deg
//         liftDir     (0 1 0);
//         dragDir     (1 0 0);
        
        pitchAxis   (0 0 1);
        magUInf     63.49238541549686;
        lRef        1.;
        Aref        0.605;
    }
    
    surfaces
    {
        type    surfaces;
        libs    (sampling);
 
        // Write at same frequency as fields
        writeControl    timeStep;
        timeStart 0.1;
 
        // Fields to be sampled
        fields          (p);
 
        // Scheme to obtain face centre value
        sampleScheme    cell;
 
        // Scheme to obtain node values
        // (only used if interpolate=true for the surfaces below)
        interpolationScheme cell;
 
        // Optional: registry storage
 
        // Output surface format
        surfaceFormat   raw;
 
        formatOptions
        {
            raw
            {
                precision  10;
            }
        }
 
        surfaces
        {
            airfoil
            {
                type        patch;
                patches     (Airfoil);
                source      cells;
                // Optional: generate values on points instead of faces
                interpolate true;
            }
            flap
            {
                type        patch;
                patches     (Flap);
                source      cells;
                // Optional: generate values on points instead of faces
                interpolate true;
            }
        }
    }

}
 
// ************************************************************************* //
